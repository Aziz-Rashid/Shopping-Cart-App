{"ast":null,"code":"var _jsxFileName = \"/home/aziz/Desktop/shopping-cart-app/shopping-cart-app/src/components/Cart.js\";\n// import React, { useContext } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import clsx from 'clsx';\n// import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n// import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n// import Typography from '@material-ui/core/Typography';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\n// import Divider from '@material-ui/core/Divider';\n// import { CartContext } from '../context/Global'\n// import './shopitemslist.css'\n// import Icon from '@material-ui/core/Icon';\n// import Countup from 'react-countup'\n// import FlipMove from 'react-flip-move'\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         width: '100%',\n//     },\n//     heading: {\n//         fontSize: theme.typography.pxToRem(15),\n//     },\n//     secondaryHeading: {\n//         fontSize: theme.typography.pxToRem(15),\n//         color: theme.palette.text.secondary,\n//     },\n//     icon: {\n//         verticalAlign: 'bottom',\n//         height: 20,\n//         width: 20,\n//     },\n//     details: {\n//         alignItems: 'center',\n//     },\n//     column: {\n//         flexBasis: '33.33%',\n//     },\n//     helper: {\n//         borderLeft: `2px solid ${theme.palette.divider}`,\n//         padding: theme.spacing(1, 2),\n//     },\n//     link: {\n//         color: theme.palette.primary.main,\n//         textDecoration: 'none',\n//         '&:hover': {\n//             textDecoration: 'underline',\n//         },\n//     },\n// }));\n// export default function Cart() {\n//     const classes = useStyles();\n//     const [cart, setcart] = useContext(CartContext)\n//     const totalamount = cart.reduce((acc, curr) => acc + curr.price, 0)\n//     const handlers = (id) => {\n//         var newcart = [...cart]\n//         newcart.splice(id, 1)\n//         setcart(newcart)\n//     }\n//     return (\n//         <div className={classes.root}>\n//             <div className=\"amount j\">\n//                 <div>\n//                     <h1 className=\"o\">Items in Cart = {cart.length}</h1>\n//                 </div>\n//                 <div>\n//                     <h1 className=\"o\">Total Amount = <Countup start={0} end={totalamount} duration={2.75} /></h1>\n//                 </div>\n//             </div>\n//             <FlipMove duration={1200} easing=\"ease-in-out\">\n//                 {cart.map((item, id) => (\n//                     <ExpansionPanel defaultExpanded key={id}>\n//                         <ExpansionPanelSummary\n//                             expandIcon={<ExpandMoreIcon />}\n//                             aria-controls=\"panel1c-content\"\n//                             id=\"panel1c-header\"\n//                         >\n//                             <div className={classes.column}>\n//                                 <Typography className={classes.heading}>Cart Items List</Typography>\n//                             </div>\n//                             <div className={classes.column}>\n//                                 <Typography className={classes.secondaryHeading}>{item.text}</Typography>\n//                             </div>\n//                         </ExpansionPanelSummary>\n//                         <ExpansionPanelDetails className={classes.details}>\n//                             <div className={classes.column} />\n//                             <div className={classes.column}>\n//                                 <Chip label={item.text} onDelete={handlers} />\n//                             </div>\n//                             <div className={clsx(classes.column, classes.helper)}>\n//                                 <Typography variant=\"caption\">\n//                                     {item.def}\n//                                     <br />\n//                                     <a href=\"#secondary-heading-and-columns\" className={classes.link}>\n//                                         Read more\n//               </a>\n//                                 </Typography>\n//                             </div>\n//                         </ExpansionPanelDetails>\n//                         <Divider />\n//                         <ExpansionPanelActions>\n//                             {/* <Button size=\"small\" color=\"primary\" onClick={handlers}>\n//                             Delete\n//                      </Button> */}\n//                             <Button\n//                                 onClick={handlers}\n//                                 variant=\"contained\"\n//                                 color=\"primary\"\n//                                 className={classes.button}\n//                                 endIcon={<Icon>delete</Icon>}\n//                             >\n//                                 Delete\n//                          </Button>\n//                         </ExpansionPanelActions>\n//                     </ExpansionPanel>\n//                 ))}\n//             </FlipMove>\n//         </div>\n//     );\n// }\n// import React, { useContext } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import { CartContext } from '../context/Global'\n// import './shopitemslist.css'\n// import Countup from 'react-countup'\n// import FlipMove from 'react-flip-move'\n// import Button from '@material-ui/core/Button';\n// import Icon from '@material-ui/core/Icon';\n// import Typography from '@material-ui/core/Typography';\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         // margin: '5px 0px',\n//         flexWrap: 'wrap',\n//         '& > *': {\n//             margin: theme.spacing(1),\n//             width: theme.spacing(16),\n//             height: theme.spacing(16),\n//         },\n//     },\n//     width: {\n//         width: '350px',\n//         height: '400px',\n//         margin: 'auto',\n//     }\n// }));\n// export default function SimplePaper() {\n//     const classes = useStyles();\n//     const [cart, setcart] = useContext(CartContext)\n//     const totalamount = cart.reduce((acc, curr) => acc + curr.price, 0)\n//     const handlers = (id) => {\n//         var newcart = [...cart]\n//         newcart.splice(id, 1)\n//         setcart(newcart)\n//     }\n//     return (\n//         <div>\n//             <div className=\"amount j\">\n//                 <div>\n//                     <h1 className=\"o\">Items in Cart = {cart.length}</h1>\n//                 </div>\n//                 <div>\n//                     <h1 className=\"o\">Total Amount = <Countup start={0} end={totalamount} duration={2.75} /></h1>\n//                 </div>\n//             </div>\n//             <div className={classes.root}>\n//                 {cart.map((item, id) => (\n//                     <Paper elevation={3} className={classes.width} key={id}>\n//                         <h1>{item.text}</h1>\n//                         <img src={item.image} alt=\"\" width=\"200px\" height='200px'/>\n//                         <Typography>\n//                             this is new shirt in market\n//                         </Typography>\n//                         <Button\n//                             onClick={handlers}\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             className={classes.button}\n//                             endIcon={<Icon>delete</Icon>}\n//                         >\n//                             Delete\n//                    </Button>\n//                    <Button varient=\"contained\" color=\"secondary\" className={classes.button}>CheckOut</Button>\n//                    <Button varient=\"contained\" color=\"secondary\" className={classes.button}>Detail</Button>\n//                     </Paper>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, \"Open responsive dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["/home/aziz/Desktop/shopping-cart-app/shopping-cart-app/src/components/Cart.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","ResponsiveDialog","open","setOpen","useState","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose"],"mappingskB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACA,QAAMM,UAAU,GAAGP,aAAa,CAACM,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACxBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAEM,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,OAAO,EAAEQ,WAHX;AAIE,uBAAgB,yBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2C,gCAA3C,CANF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIADF,CAPF,eAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEA,WAA3B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAbF,CAJF,CADF;AA6BD","sourcesContent":["// import React, { useContext } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import clsx from 'clsx';\n// import ExpansionPanel from '@material-ui/core/ExpansionPanel';\n// import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n// import ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n// import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n// import Typography from '@material-ui/core/Typography';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\n// import Divider from '@material-ui/core/Divider';\n// import { CartContext } from '../context/Global'\n// import './shopitemslist.css'\n// import Icon from '@material-ui/core/Icon';\n// import Countup from 'react-countup'\n// import FlipMove from 'react-flip-move'\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         width: '100%',\n//     },\n//     heading: {\n//         fontSize: theme.typography.pxToRem(15),\n//     },\n//     secondaryHeading: {\n//         fontSize: theme.typography.pxToRem(15),\n//         color: theme.palette.text.secondary,\n//     },\n//     icon: {\n//         verticalAlign: 'bottom',\n//         height: 20,\n//         width: 20,\n//     },\n//     details: {\n//         alignItems: 'center',\n//     },\n//     column: {\n//         flexBasis: '33.33%',\n//     },\n//     helper: {\n//         borderLeft: `2px solid ${theme.palette.divider}`,\n//         padding: theme.spacing(1, 2),\n//     },\n//     link: {\n//         color: theme.palette.primary.main,\n//         textDecoration: 'none',\n//         '&:hover': {\n//             textDecoration: 'underline',\n//         },\n//     },\n// }));\n\n// export default function Cart() {\n//     const classes = useStyles();\n//     const [cart, setcart] = useContext(CartContext)\n//     const totalamount = cart.reduce((acc, curr) => acc + curr.price, 0)\n//     const handlers = (id) => {\n//         var newcart = [...cart]\n//         newcart.splice(id, 1)\n//         setcart(newcart)\n//     }\n//     return (\n\n//         <div className={classes.root}>\n//             <div className=\"amount j\">\n//                 <div>\n//                     <h1 className=\"o\">Items in Cart = {cart.length}</h1>\n//                 </div>\n//                 <div>\n//                     <h1 className=\"o\">Total Amount = <Countup start={0} end={totalamount} duration={2.75} /></h1>\n//                 </div>\n//             </div>\n//             <FlipMove duration={1200} easing=\"ease-in-out\">\n//                 {cart.map((item, id) => (\n//                     <ExpansionPanel defaultExpanded key={id}>\n//                         <ExpansionPanelSummary\n//                             expandIcon={<ExpandMoreIcon />}\n//                             aria-controls=\"panel1c-content\"\n//                             id=\"panel1c-header\"\n//                         >\n//                             <div className={classes.column}>\n//                                 <Typography className={classes.heading}>Cart Items List</Typography>\n//                             </div>\n//                             <div className={classes.column}>\n//                                 <Typography className={classes.secondaryHeading}>{item.text}</Typography>\n//                             </div>\n//                         </ExpansionPanelSummary>\n//                         <ExpansionPanelDetails className={classes.details}>\n//                             <div className={classes.column} />\n//                             <div className={classes.column}>\n//                                 <Chip label={item.text} onDelete={handlers} />\n//                             </div>\n//                             <div className={clsx(classes.column, classes.helper)}>\n//                                 <Typography variant=\"caption\">\n//                                     {item.def}\n//                                     <br />\n//                                     <a href=\"#secondary-heading-and-columns\" className={classes.link}>\n//                                         Read more\n//               </a>\n//                                 </Typography>\n//                             </div>\n//                         </ExpansionPanelDetails>\n//                         <Divider />\n//                         <ExpansionPanelActions>\n//                             {/* <Button size=\"small\" color=\"primary\" onClick={handlers}>\n//                             Delete\n//                      </Button> */}\n//                             <Button\n//                                 onClick={handlers}\n//                                 variant=\"contained\"\n//                                 color=\"primary\"\n//                                 className={classes.button}\n//                                 endIcon={<Icon>delete</Icon>}\n//                             >\n//                                 Delete\n//                          </Button>\n//                         </ExpansionPanelActions>\n//                     </ExpansionPanel>\n\n//                 ))}\n//             </FlipMove>\n//         </div>\n\n//     );\n// }\n\n\n// import React, { useContext } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import { CartContext } from '../context/Global'\n// import './shopitemslist.css'\n// import Countup from 'react-countup'\n// import FlipMove from 'react-flip-move'\n// import Button from '@material-ui/core/Button';\n// import Icon from '@material-ui/core/Icon';\n// import Typography from '@material-ui/core/Typography';\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         // margin: '5px 0px',\n//         flexWrap: 'wrap',\n//         '& > *': {\n//             margin: theme.spacing(1),\n//             width: theme.spacing(16),\n//             height: theme.spacing(16),\n//         },\n//     },\n//     width: {\n//         width: '350px',\n//         height: '400px',\n//         margin: 'auto',\n//     }\n// }));\n\n// export default function SimplePaper() {\n//     const classes = useStyles();\n//     const [cart, setcart] = useContext(CartContext)\n//     const totalamount = cart.reduce((acc, curr) => acc + curr.price, 0)\n//     const handlers = (id) => {\n//         var newcart = [...cart]\n//         newcart.splice(id, 1)\n//         setcart(newcart)\n//     }\n//     return (\n//         <div>\n//             <div className=\"amount j\">\n//                 <div>\n//                     <h1 className=\"o\">Items in Cart = {cart.length}</h1>\n//                 </div>\n//                 <div>\n//                     <h1 className=\"o\">Total Amount = <Countup start={0} end={totalamount} duration={2.75} /></h1>\n//                 </div>\n//             </div>\n\n//             <div className={classes.root}>\n//                 {cart.map((item, id) => (\n//                     <Paper elevation={3} className={classes.width} key={id}>\n//                         <h1>{item.text}</h1>\n//                         <img src={item.image} alt=\"\" width=\"200px\" height='200px'/>\n//                         <Typography>\n//                             this is new shirt in market\n//                         </Typography>\n//                         <Button\n//                             onClick={handlers}\n//                             variant=\"contained\"\n//                             color=\"primary\"\n//                             className={classes.button}\n//                             endIcon={<Icon>delete</Icon>}\n//                         >\n//                             Delete\n//                    </Button>\n//                    <Button varient=\"contained\" color=\"secondary\" className={classes.button}>CheckOut</Button>\n//                    <Button varient=\"contained\" color=\"secondary\" className={classes.button}>Detail</Button>\n//                     </Paper>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}